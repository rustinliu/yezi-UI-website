let n=document.createElement("style");n.innerHTML='.yezi-dialog{background:#fff;border-radius:4px;box-shadow:0 0 3px rgba(93,165,1,.5);min-width:15em;max-width:90%}.yezi-dialog-overlay{position:fixed;top:0;left:0;width:100%;height:100%;backdrop-filter:blur(5px);-webkit-backdrop-filter:blur(5px);z-index:10}.yezi-dialog-wrapper{position:fixed;left:50%;top:50%;transform:translate(-50%,-50%);z-index:11}.yezi-dialog>header{padding:12px 16px;border-bottom:1px solid #d9d9d9;display:flex;align-items:center;justify-content:space-between;font-size:20px}.yezi-dialog>main{padding:12px 16px}.yezi-dialog>footer{border-top:1px solid #d9d9d9;padding:12px 16px;text-align:right}.yezi-dialog-close{position:relative;display:inline-block;width:16px;height:16px;cursor:pointer}.yezi-dialog-close::after,.yezi-dialog-close::before{content:"";position:absolute;height:1px;background:#000;width:100%;top:50%;left:50%}.yezi-dialog-close::before{transform:translate(-50%,-50%) rotate(-45deg)}.yezi-dialog-close::after{transform:translate(-50%,-50%) rotate(45deg)}.overlay-enter-active,.overlay-leave-active,.wrapper-enter-active,.wrapper-leave-active{transition:.25s}.overlay-enter-from,.overlay-leave-to{opacity:0}.wrapper-enter-from,.wrapper-leave-to{transform:translate(-50%,-50%) translateY(-16px);opacity:0}',document.head.appendChild(n);import{b as e,s as o,a as t}from"./Demo.0e049ba2.js";import{r as l,c as i,g as a,j as r,b as s,w as p,T as u,u as c,F as d,o as f,a as g,q as m,f as v,h as C}from"./index.911e8b57.js";var y={props:{title:{type:String,default:"提示"},visible:{type:Boolean,default:!1},overlayClose:{type:Boolean,default:!0},onCancel:{type:Function,default:()=>{}},onConfirm:{type:Function,default:()=>{}}},components:{Button:e},setup(n,e){const o=()=>{e.emit("update:visible",!1)};return{close:o,onClickOverlay:()=>{n.overlayClose&&o()},onCancel:()=>{n.onCancel&&!1!==n.onCancel()&&o()},onConfirm:()=>{n.onConfirm&&!1!==n.onConfirm()&&o()}}}};const b={key:0,class:"yezi-dialog-wrapper"},D={class:"yezi-dialog"},x=v("取消"),k=v("确认");y.render=function(n,e,o,t,v,C){const y=l("Button");return f(),i(d,null,[a(' <template v-if="visible"> '),(f(),r(c,{to:"body"},[s(u,{name:"overlay"},{default:p((()=>[o.visible?(f(),i("div",{key:0,class:"yezi-dialog-overlay",onClick:e[0]||(e[0]=(...n)=>t.onClickOverlay&&t.onClickOverlay(...n))})):a("v-if",!0)])),_:1}),s(u,{name:"wrapper"},{default:p((()=>[o.visible?(f(),i("div",b,[g("div",D,[g("header",null,[m(n.$slots,"title"),g("span",{onClick:e[1]||(e[1]=(...n)=>t.close&&t.close(...n)),class:"yezi-dialog-close"})]),g("main",null,[m(n.$slots,"content")]),g("footer",null,[s(y,{onClick:t.onCancel},{default:p((()=>[x])),_:1},8,["onClick"]),s(y,{level:"main",onClick:t.onConfirm},{default:p((()=>[k])),_:1},8,["onClick"])])])])):a("v-if",!0)])),_:3})])),a(" </template> ")],2112)};var B={components:{Dialog:y,Button:e},setup(){const n=C(!1);return{open:n,toggle:()=>{n.value=!n.value}}}};const _=v("打开对话框"),h=g("p",null,"你好",-1),z=g("p",null,"这是一条普通的消息",-1),w=g("strong",null,"一个加粗的标题",-1);function T(n){n.__sourceCode='<template>\n    <div>\n        <Button @click="toggle">打开对话框</Button>\n        <Dialog v-model:visible="open" :overlayClose="false">\n            <template v-slot:content>\n                <p>你好</p>\n                <p>这是一条普通的消息</p>\n            </template>\n            <template v-slot:title>\n                <strong>一个加粗的标题</strong>\n            </template>\n        </Dialog>\n    </div>\n</template>\n\n<script lang="ts">\nimport Dialog from \'../libs/Dialog.vue\';\nimport Button from \'../libs/Button.vue\';\nimport { ref } from \'vue\';\nexport default {\n    components: {\n        Dialog,\n        Button,\n    },\n    setup() {\n        const open = ref(false);\n        const toggle = () => {\n            open.value = !open.value;\n        };\n\n        return {\n            open,\n            toggle,\n        };\n    },\n};\n<\/script>',n.__sourceCodeTitle=" 常规使用 "}T(B),B.render=function(n,e,o,t,a,r){const u=l("Button"),c=l("Dialog");return f(),i("div",null,[s(u,{onClick:t.toggle},{default:p((()=>[_])),_:1},8,["onClick"]),s(c,{visible:t.open,"onUpdate:visible":e[0]||(e[0]=n=>t.open=n),overlayClose:!1},{content:p((()=>[h,z])),title:p((()=>[w])),_:1},8,["visible"])])};var j={components:{Dialog:y,Button:e},setup(){const n=C(!1);return{open:n,toggle:()=>{n.value=!n.value},fun1:()=>{console.log("确认")},fun2:()=>{console.log("取消")}}}};const F=v("打开对话框"),O=g("p",null,"你好",-1),U=g("p",null,"这也是一条普通的消息",-1),A=g("p",null,"但是有回调了😊",-1),$=g("strong",null,"又一个加粗的标题",-1);function q(n){n.__sourceCode='<template>\n    <div>\n        <Button @click="toggle">打开对话框</Button>\n        <Dialog v-model:visible="open" :overlayClose="false" :onConfirm="fun1" :onCancel="fun2">\n            <template v-slot:content>\n                <p>你好</p>\n                <p>这也是一条普通的消息</p>\n                <p>但是有回调了😊</p>\n            </template>\n            <template v-slot:title>\n                <strong>又一个加粗的标题</strong>\n            </template>\n        </Dialog>\n    </div>\n</template>\n\n<script lang="ts">\nimport Dialog from \'../libs/Dialog.vue\';\nimport Button from \'../libs/Button.vue\';\nimport { ref } from \'vue\';\nexport default {\n    components: {\n        Dialog,\n        Button,\n    },\n    setup() {\n        const open = ref(false);\n        const toggle = () => {\n            open.value = !open.value;\n        };\n        const fun1 = () => {\n            console.log(\'确认\');\n        };\n        const fun2 = () => {\n            console.log(\'取消\');\n        };\n        return {\n            open,\n            toggle,\n            fun1,\n            fun2,\n        };\n    },\n};\n<\/script>',n.__sourceCodeTitle=" 添加回调函数 "}q(j),j.render=function(n,e,o,t,a,r){const u=l("Button"),c=l("Dialog");return f(),i("div",null,[s(u,{onClick:t.toggle},{default:p((()=>[F])),_:1},8,["onClick"]),s(c,{visible:t.open,"onUpdate:visible":e[0]||(e[0]=n=>t.open=n),overlayClose:!1,onConfirm:t.fun1,onCancel:t.fun2},{content:p((()=>[O,U,A])),title:p((()=>[$])),_:1},8,["visible","onConfirm","onCancel"])])};var E={components:{Dialog:y,Button:e},setup(){const n=C(!1);return{open:n,toggle:()=>{n.value=!n.value},fun1:()=>{console.log("确认")},fun2:()=>{console.log("取消")}}}};const H=v("打开对话框"),L=g("p",null,"你好",-1),M=g("p",null,"这还是一条普通的消息",-1),S=g("p",null,"但是遮罩可以触发返回了😊",-1),Y=g("strong",null,"还是一个加粗的标题",-1);function G(n){n.__sourceCode='<template>\n    <div>\n        <Button @click="toggle">打开对话框</Button>\n        <Dialog v-model:visible="open" :overlayClose="true" :onConfirm="fun1" :onCancel="fun2">\n            <template v-slot:content>\n                <p>你好</p>\n                <p>这还是一条普通的消息</p>\n                <p>但是遮罩可以触发返回了😊</p>\n            </template>\n            <template v-slot:title>\n                <strong>还是一个加粗的标题</strong>\n            </template>\n        </Dialog>\n    </div>\n</template>\n\n<script lang="ts">\nimport Dialog from \'../libs/Dialog.vue\';\nimport Button from \'../libs/Button.vue\';\nimport { ref } from \'vue\';\nexport default {\n    components: {\n        Dialog,\n        Button,\n    },\n    setup() {\n        const open = ref(false);\n        const toggle = () => {\n            open.value = !open.value;\n        };\n        const fun1 = () => {\n            console.log(\'确认\');\n        };\n        const fun2 = () => {\n            console.log(\'取消\');\n        };\n        return {\n            open,\n            toggle,\n            fun1,\n            fun2,\n        };\n    },\n};\n<\/script>',n.__sourceCodeTitle=" 遮罩是否触发返回 "}G(E),E.render=function(n,e,o,t,a,r){const u=l("Button"),c=l("Dialog");return f(),i("div",null,[s(u,{onClick:t.toggle},{default:p((()=>[H])),_:1},8,["onClick"]),s(c,{visible:t.open,"onUpdate:visible":e[0]||(e[0]=n=>t.open=n),overlayClose:!0,onConfirm:t.fun1,onCancel:t.fun2},{content:p((()=>[L,M,S])),title:p((()=>[Y])),_:1},8,["visible","onConfirm","onCancel"])])};var I={components:{Demo:o,Attr:t},setup:()=>({Dialog1Demo:B,Dialog2Demo:j,Dialog3Demo:E,data:[{parameter:"visible",description:"对话框是否可见",type:"boolean",options:"true / false",default:"false"},{parameter:"title",description:"对话框的标题",type:"string"},{parameter:"overlayClose",description:"控制点击遮罩时是否关闭对话框",type:"boolean",options:"true / false",default:"false"},{parameter:"onConfirm",description:"点击确定后执行的回调",type:"function"},{parameter:"onCancel",description:"点击取消后执行的回调",type:"function"}]})};const J=g("h1",null,"Dialog示例",-1);I.render=function(n,e,o,t,a,r){const p=l("Demo"),u=l("Attr");return f(),i(d,null,[J,s(p,{component:t.Dialog1Demo},null,8,["component"]),s(p,{component:t.Dialog2Demo},null,8,["component"]),s(p,{component:t.Dialog3Demo},null,8,["component"]),s(u,{attributes:t.data},null,8,["attributes"])],64)};export{I as default};
